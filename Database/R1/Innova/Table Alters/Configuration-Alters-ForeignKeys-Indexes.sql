USE [Innova]
GO

IF ( COLUMNPROPERTY( OBJECT_ID( 'app.Setting' ), 'SettingID', 'IsIdentity' ) = 0 )
BEGIN
	DELETE app.ConfigurationSetting
	DELETE app.Setting
	ALTER TABLE app.ConfigurationSetting DROP CONSTRAINT FK_ConfigurationSetting_SettingID
	ALTER TABLE app.Setting DROP CONSTRAINT PK_Setting
	ALTER TABLE app.Setting DROP COLUMN SettingID
	ALTER TABLE app.Setting ADD SettingID INT NOT NULL IDENTITY(1, 1)
	ALTER TABLE app.Setting ADD CONSTRAINT PK_Setting PRIMARY KEY( SettingID )
END
GO

IF NOT EXISTS( SELECT * FROM INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS WHERE CONSTRAINT_NAME = 'FK_Configuration_ConfigurationTypeID' AND CONSTRAINT_SCHEMA = 'app' )
BEGIN
	ALTER TABLE app.Configuration ADD CONSTRAINT FK_Configuration_ConfigurationTypeID FOREIGN KEY( ConfigurationTypeID )
		REFERENCES app.[ConfigurationType]( ConfigurationTypeID )
END
GO

IF NOT EXISTS( SELECT * FROM INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS WHERE CONSTRAINT_NAME = 'FK_Setting_ConfigurationTypeID' AND CONSTRAINT_SCHEMA = 'app' )
BEGIN
	ALTER TABLE app.Setting ADD CONSTRAINT FK_Setting_ConfigurationTypeID FOREIGN KEY( ConfigurationTypeID )
		REFERENCES app.[ConfigurationType]( ConfigurationTypeID )
END
GO

IF NOT EXISTS( SELECT * FROM INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS WHERE CONSTRAINT_NAME = 'FK_ConfigurationSetting_ConfigurationID' AND CONSTRAINT_SCHEMA = 'app' )
BEGIN
	ALTER TABLE app.ConfigurationSetting ADD CONSTRAINT FK_ConfigurationSetting_ConfigurationID FOREIGN KEY( ConfigurationID )
		REFERENCES app.[Configuration]( ConfigurationID )
END
GO

IF NOT EXISTS( SELECT * FROM INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS WHERE CONSTRAINT_NAME = 'FK_ConfigurationSetting_EnvironmentID' AND CONSTRAINT_SCHEMA = 'app' )
BEGIN
	ALTER TABLE app.ConfigurationSetting ADD CONSTRAINT FK_ConfigurationSetting_EnvironmentID FOREIGN KEY( EnvironmentID )
		REFERENCES app.[Environment]( EnvironmentID )
END
GO

IF NOT EXISTS( SELECT * FROM INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS WHERE CONSTRAINT_NAME = 'FK_ConfigurationSetting_SettingID' AND CONSTRAINT_SCHEMA = 'app' )
BEGIN
	ALTER TABLE app.ConfigurationSetting ADD CONSTRAINT FK_ConfigurationSetting_SettingID FOREIGN KEY( SettingID )
		REFERENCES app.[Setting]( SettingID )
END
GO

IF NOT EXISTS( SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = 'App' AND TABLE_NAME = 'Setting' AND COLUMN_NAME = 'DataTypeName' )
BEGIN
	ALTER TABLE app.Setting ADD DataTypeName VARCHAR( 50 ) NOT NULL DEFAULT 'System.String'
END
GO

IF NOT EXISTS( SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = 'App' AND TABLE_NAME = 'ConfigurationType' AND COLUMN_NAME = 'AssemblyName' )
BEGIN
	ALTER TABLE app.ConfigurationType ADD AssemblyName VARCHAR( 250 )
END
GO

IF NOT EXISTS( SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = 'App' AND TABLE_NAME = 'ConfigurationType' AND COLUMN_NAME = 'ClassName' )
BEGIN
	ALTER TABLE app.ConfigurationType ADD ClassName VARCHAR( 250 )
END
GO

IF NOT EXISTS( SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = 'App' AND TABLE_NAME = 'Setting' AND COLUMN_NAME = 'IsRequired' )
BEGIN
	ALTER TABLE app.Setting ADD [IsRequired] BIT NOT NULL CONSTRAINT [DF_Setting_IsRequired] DEFAULT 0
END
GO

IF EXISTS( SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = 'App' AND TABLE_NAME = 'Configuration' AND COLUMN_NAME = 'Name' )
	AND NOT EXISTS( SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = 'App' AND TABLE_NAME = 'Configuration' AND COLUMN_NAME = 'Name' AND CHARACTER_MAXIMUM_LENGTH = 100 )
BEGIN
	ALTER TABLE app.Configuration ALTER COLUMN Name VARCHAR( 100 ) NOT NULL
END
GO
